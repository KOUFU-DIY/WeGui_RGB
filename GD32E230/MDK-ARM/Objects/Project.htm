<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\Project.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\Project.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6230001: Last Updated: Sat Aug  2 19:39:40 2025
<BR><P>
<H3>Maximum Stack Usage =        288 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; Wegui_loop_func &rArr; Wegui_show_mList &rArr; Lcd_Draw_UTF8_String &rArr; Lcd_Draw_Unicode &rArr; Lcd_Draw_Bitmap &rArr; Lcd_Draw_One_Byte
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1e]">ADC_CMP_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1e]">ADC_CMP_IRQHandler</a><BR>
 <LI><a href="#[f]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[f]">HardFault_Handler</a><BR>
 <LI><a href="#[e]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[e]">NMI_Handler</a><BR>
 <LI><a href="#[11]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[11]">PendSV_Handler</a><BR>
 <LI><a href="#[10]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[10]">SVC_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1e]">ADC_CMP_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[1b]">DMA_Channel0_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[1c]">DMA_Channel1_2_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[1d]">DMA_Channel3_4_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[18]">EXTI0_1_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[19]">EXTI2_3_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[1a]">EXTI4_15_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[16]">FMC_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[f]">HardFault_Handler</a> from gd32e23x_it.o(.text.HardFault_Handler) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[2d]">I2C0_ER_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[27]">I2C0_EV_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[2e]">I2C1_ER_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[28]">I2C1_EV_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[4c]">LCD_Send_nCmd</a> from gd32e230_lcd_hard_4spi_port.o(.text.LCD_Send_nCmd) referenced 4 times from st7735.o(.text.ST7735_Init)
 <LI><a href="#[4c]">LCD_Send_nCmd</a> from gd32e230_lcd_hard_4spi_port.o(.text.LCD_Send_nCmd) referenced 2 times from st7735.o(.text.ST7735_Set_Addr)
 <LI><a href="#[14]">LVD_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[37]">Lcd_Draw_Circel_part</a> from lcd_driver.o(.text.Lcd_Draw_Circel_part) referenced 6 times from lcd_driver.o(.text.Lcd_Draw_RBox)
 <LI><a href="#[3b]">Lcd_Draw_HLine</a> from lcd_driver.o(.text.Lcd_Draw_HLine) referenced 8 times from lcd_driver.o(.text.Lcd_Fill_RBox)
 <LI><a href="#[38]">Lcd_Draw_Pixl</a> from lcd_driver.o(.text.Lcd_Draw_Pixl) referenced 16 times from lcd_driver.o(.text.Lcd_Draw_RBox)
 <LI><a href="#[3a]">Lcd_Fill_Box</a> from lcd_driver.o(.text.Lcd_Fill_Box) referenced 6 times from lcd_driver.o(.text.Lcd_Fill_RBox)
 <LI><a href="#[39]">Lcd_Fill_Circel_part</a> from lcd_driver.o(.text.Lcd_Fill_Circel_part) referenced 8 times from lcd_driver.o(.text.Lcd_Fill_RBox)
 <LI><a href="#[4d]">Lcd_Set_Driver_Mode</a> from lcd_driver.o(.text.Lcd_Set_Driver_Mode) referenced 4 times from lcd_wegui_driver.o(.text.Wegui_loop_func)
 <LI><a href="#[4d]">Lcd_Set_Driver_Mode</a> from lcd_driver.o(.text.Lcd_Set_Driver_Mode) referenced 6 times from lcd_wegui_tip.o(.text.Wegui_show_tip)
 <LI><a href="#[e]">NMI_Handler</a> from gd32e23x_it.o(.text.NMI_Handler) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[11]">PendSV_Handler</a> from gd32e23x_it.o(.text.PendSV_Handler) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[17]">RCU_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[4e]">RGB_Set_Driver_Colour</a> from lcd_driver.o(.text.RGB_Set_Driver_Colour) referenced 2 times from lcd_wegui_menu_mlist.o(.text.Wegui_mList_Init)
 <LI><a href="#[4e]">RGB_Set_Driver_Colour</a> from lcd_driver.o(.text.RGB_Set_Driver_Colour) referenced 2 times from lcd_driver.o(.text.lcd_driver_Init)
 <LI><a href="#[15]">RTC_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[d]">Reset_Handler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[29]">SPI0_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[2a]">SPI1_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[10]">SVC_Handler</a> from gd32e23x_it.o(.text.SVC_Handler) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[9]">Set_language_Chinese</a> from lcd_wegui_menu_app.o(.text.Set_language_Chinese) referenced 2 times from user_wegui_menu.o(.data.m_Setting_Language_Chinese)
 <LI><a href="#[a]">Set_language_English</a> from lcd_wegui_menu_app.o(.text.Set_language_English) referenced 2 times from user_wegui_menu.o(.data.m_Setting_Language_English)
 <LI><a href="#[12]">SysTick_Handler</a> from gd32e23x_it.o(.text.SysTick_Handler) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[30]">SystemInit</a> from system_gd32e23x.o(.text.SystemInit) referenced from startup_gd32e23x.o(.text)
 <LI><a href="#[1f]">TIMER0_BRK_UP_TRG_COM_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[20]">TIMER0_Channel_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[23]">TIMER13_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[24]">TIMER14_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[25]">TIMER15_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[26]">TIMER16_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[21]">TIMER2_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[22]">TIMER5_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[2b]">USART0_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[2c]">USART1_IRQHandler</a> from gd32e230_wegui_uart_port.o(.text.USART1_IRQHandler) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[4]">Uart_Screen_App_Begin</a> from lcd_wegui_menu_app.o(.text.Uart_Screen_App_Begin) referenced 2 times from user_wegui_menu.o(.data.m_App_UartScreen)
 <LI><a href="#[5]">Uart_Screen_App_Loop</a> from lcd_wegui_menu_app.o(.text.Uart_Screen_App_Loop) referenced 2 times from user_wegui_menu.o(.data.m_App_UartScreen)
 <LI><a href="#[6]">Uart_Screen_App_Quit</a> from lcd_wegui_menu_app.o(.text.Uart_Screen_App_Quit) referenced 2 times from user_wegui_menu.o(.data.m_App_UartScreen)
 <LI><a href="#[7]">Uart_Screen_Refresh</a> from lcd_wegui_menu_app.o(.text.Uart_Screen_Refresh) referenced 2 times from user_wegui_menu.o(.data.m_App_UartScreen)
 <LI><a href="#[13]">WWDGT_IRQHandler</a> from startup_gd32e23x.o(.text) referenced from startup_gd32e23x.o(RESET)
 <LI><a href="#[31]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_gd32e23x.o(.text)
 <LI><a href="#[33]">gpio_mode_set</a> from gd32e23x_gpio.o(.text.gpio_mode_set) referenced 12 times from gd32e230_lcd_hard_4spi_port.o(.text.LCD_Port_Init)
 <LI><a href="#[33]">gpio_mode_set</a> from gd32e23x_gpio.o(.text.gpio_mode_set) referenced 4 times from gd32e230_wegui_4key_port.o(.text.Wegui_4key_port_Init)
 <LI><a href="#[34]">gpio_output_options_set</a> from gd32e23x_gpio.o(.text.gpio_output_options_set) referenced 12 times from gd32e230_lcd_hard_4spi_port.o(.text.LCD_Port_Init)
 <LI><a href="#[3c]">lcd_driver_Write_0</a> from lcd_driver.o(.text.lcd_driver_Write_0) referenced 2 times from lcd_driver.o(.text.Lcd_Set_Driver_Mode)
 <LI><a href="#[3c]">lcd_driver_Write_0</a> from lcd_driver.o(.text.lcd_driver_Write_0) referenced 2 times from lcd_driver.o(.text.lcd_driver_Init)
 <LI><a href="#[3e]">lcd_driver_Write_0_inBox</a> from lcd_driver.o(.text.lcd_driver_Write_0_inBox) referenced 16 times from lcd_driver.o(.text.Lcd_Set_Driver_Mode)
 <LI><a href="#[3d]">lcd_driver_Write_1</a> from lcd_driver.o(.text.lcd_driver_Write_1) referenced 2 times from lcd_driver.o(.text.Lcd_Set_Driver_Mode)
 <LI><a href="#[3d]">lcd_driver_Write_1</a> from lcd_driver.o(.text.lcd_driver_Write_1) referenced 2 times from lcd_driver.o(.text.lcd_driver_Init)
 <LI><a href="#[36]">lcd_driver_Write_1_inBox</a> from lcd_driver.o(.text.lcd_driver_Write_1_inBox) referenced 2 times from lcd_driver.o(.text.Lcd_Draw_Circel_part)
 <LI><a href="#[36]">lcd_driver_Write_1_inBox</a> from lcd_driver.o(.text.lcd_driver_Write_1_inBox) referenced 2 times from lcd_driver.o(.text.Lcd_Draw_RBox)
 <LI><a href="#[36]">lcd_driver_Write_1_inBox</a> from lcd_driver.o(.text.lcd_driver_Write_1_inBox) referenced 2 times from lcd_driver.o(.text.Lcd_Fill_Circel_part)
 <LI><a href="#[36]">lcd_driver_Write_1_inBox</a> from lcd_driver.o(.text.lcd_driver_Write_1_inBox) referenced 2 times from lcd_driver.o(.text.Lcd_Fill_RBox)
 <LI><a href="#[36]">lcd_driver_Write_1_inBox</a> from lcd_driver.o(.text.lcd_driver_Write_1_inBox) referenced 2 times from lcd_driver.o(.text.Lcd_Set_Driver_Mode)
 <LI><a href="#[45]">lcd_driver_Write_2</a> from lcd_driver.o(.text.lcd_driver_Write_2) referenced 2 times from lcd_driver.o(.text.Lcd_Set_Driver_Mode)
 <LI><a href="#[43]">lcd_driver_Write_2_inBox</a> from lcd_driver.o(.text.lcd_driver_Write_2_inBox) referenced 2 times from lcd_driver.o(.text.Lcd_Set_Driver_Mode)
 <LI><a href="#[44]">lcd_driver_Write_3</a> from lcd_driver.o(.text.lcd_driver_Write_3) referenced 2 times from lcd_driver.o(.text.Lcd_Set_Driver_Mode)
 <LI><a href="#[41]">lcd_driver_Write_3_inBox</a> from lcd_driver.o(.text.lcd_driver_Write_3_inBox) referenced 2 times from lcd_driver.o(.text.Lcd_Set_Driver_Mode)
 <LI><a href="#[40]">lcd_driver_Write_4</a> from lcd_driver.o(.text.lcd_driver_Write_4) referenced 2 times from lcd_driver.o(.text.Lcd_Set_Driver_Mode)
 <LI><a href="#[3f]">lcd_driver_Write_4_inBox</a> from lcd_driver.o(.text.lcd_driver_Write_4_inBox) referenced 2 times from lcd_driver.o(.text.Lcd_Set_Driver_Mode)
 <LI><a href="#[42]">lcd_driver_Write_5</a> from lcd_driver.o(.text.lcd_driver_Write_5) referenced 2 times from lcd_driver.o(.text.Lcd_Set_Driver_Mode)
 <LI><a href="#[48]">lcd_driver_Write_5_inBox</a> from lcd_driver.o(.text.lcd_driver_Write_5_inBox) referenced 2 times from lcd_driver.o(.text.Lcd_Set_Driver_Mode)
 <LI><a href="#[46]">lcd_driver_Write_6</a> from lcd_driver.o(.text.lcd_driver_Write_6) referenced 2 times from lcd_driver.o(.text.Lcd_Set_Driver_Mode)
 <LI><a href="#[49]">lcd_driver_Write_6_inBox</a> from lcd_driver.o(.text.lcd_driver_Write_6_inBox) referenced 2 times from lcd_driver.o(.text.Lcd_Set_Driver_Mode)
 <LI><a href="#[47]">lcd_driver_Write_7</a> from lcd_driver.o(.text.lcd_driver_Write_7) referenced 2 times from lcd_driver.o(.text.Lcd_Set_Driver_Mode)
 <LI><a href="#[4b]">lcd_driver_Write_7_inBox</a> from lcd_driver.o(.text.lcd_driver_Write_7_inBox) referenced 2 times from lcd_driver.o(.text.Lcd_Set_Driver_Mode)
 <LI><a href="#[35]">lcd_driver_Write_inv</a> from lcd_driver.o(.text.lcd_driver_Write_inv) referenced 2 times from lcd_driver.o(.text.Lcd_Draw_Circel_part)
 <LI><a href="#[35]">lcd_driver_Write_inv</a> from lcd_driver.o(.text.lcd_driver_Write_inv) referenced 2 times from lcd_driver.o(.text.Lcd_Draw_RBox)
 <LI><a href="#[35]">lcd_driver_Write_inv</a> from lcd_driver.o(.text.lcd_driver_Write_inv) referenced 2 times from lcd_driver.o(.text.Lcd_Fill_Circel_part)
 <LI><a href="#[35]">lcd_driver_Write_inv</a> from lcd_driver.o(.text.lcd_driver_Write_inv) referenced 2 times from lcd_driver.o(.text.Lcd_Fill_RBox)
 <LI><a href="#[35]">lcd_driver_Write_inv</a> from lcd_driver.o(.text.lcd_driver_Write_inv) referenced 2 times from lcd_driver.o(.text.Lcd_Set_Driver_Mode)
 <LI><a href="#[4a]">lcd_driver_Write_inv_inBox</a> from lcd_driver.o(.text.lcd_driver_Write_inv_inBox) referenced 2 times from lcd_driver.o(.text.Lcd_Set_Driver_Mode)
 <LI><a href="#[0]">m_App_ThemeClock_Begin</a> from lcd_wegui_menu_app.o(.text.m_App_ThemeClock_Begin) referenced 2 times from user_wegui_menu.o(.data.m_App_ThemeClock)
 <LI><a href="#[1]">m_App_ThemeClock_Loop</a> from lcd_wegui_menu_app.o(.text.m_App_ThemeClock_Loop) referenced 2 times from user_wegui_menu.o(.data.m_App_ThemeClock)
 <LI><a href="#[2]">m_App_ThemeClock_Quit</a> from lcd_wegui_menu_app.o(.text.m_App_ThemeClock_Quit) referenced 2 times from user_wegui_menu.o(.data.m_App_ThemeClock)
 <LI><a href="#[3]">m_App_ThemeClock_Refresh</a> from lcd_wegui_menu_app.o(.text.m_App_ThemeClock_Refresh) referenced 2 times from user_wegui_menu.o(.data.m_App_ThemeClock)
 <LI><a href="#[c]">m_wDemo_wMessage_Pres2_func</a> from lcd_wegui_menu_app.o(.text.m_wDemo_wMessage_Pres2_func) referenced 2 times from user_wegui_menu.o(.data.m_wDemo_wMessage_Pres2)
 <LI><a href="#[b]">m_wDemo_wMessage_Pres_func</a> from lcd_wegui_menu_app.o(.text.m_wDemo_wMessage_Pres_func) referenced 2 times from user_wegui_menu.o(.data.m_wDemo_wMessage_Pres)
 <LI><a href="#[2f]">main</a> from main.o(.text.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[32]">rcu_periph_clock_enable</a> from gd32e23x_rcu.o(.text.rcu_periph_clock_enable) referenced 14 times from gd32e230_lcd_hard_4spi_port.o(.text.LCD_Port_Init)
 <LI><a href="#[32]">rcu_periph_clock_enable</a> from gd32e23x_rcu.o(.text.rcu_periph_clock_enable) referenced 8 times from gd32e230_wegui_4key_port.o(.text.Wegui_4key_port_Init)
 <LI><a href="#[32]">rcu_periph_clock_enable</a> from gd32e23x_rcu.o(.text.rcu_periph_clock_enable) referenced 6 times from main.o(.text.startup_init)
 <LI><a href="#[8]">update_Wegui_screen_brightness</a> from lcd_wegui_menu_app.o(.text.update_Wegui_screen_brightness) referenced 2 times from user_wegui_menu.o(.data.m_Setting_Display_Brightness)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[31]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(.text)
</UL>
<P><STRONG><a name="[ba]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[4f]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[51]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[bb]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[bc]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[bd]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[be]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[bf]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[d]"></a>Reset_Handler</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>ADC_CMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_CMP_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_CMP_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA_Channel0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>DMA_Channel1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>DMA_Channel3_4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>EXTI0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>EXTI2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>EXTI4_15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>FMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>I2C0_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>I2C0_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>LVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>RCU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>SPI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>TIMER0_BRK_UP_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>TIMER0_Channel_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>TIMER13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TIMER14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TIMER15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>TIMER16_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>TIMER2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>TIMER5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>USART0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>WWDGT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e23x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735_Init
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Port_Init
</UL>

<P><STRONG><a name="[c0]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[c1]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[50]"></a>__scatterload</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[c2]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[c3]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[c4]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[a5]"></a>Get_submenu_sum</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, lcd_wegui_driver.o(.text.Get_submenu_sum))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_mlist_cursor_Next
</UL>

<P><STRONG><a name="[f]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gd32e23x_it.o(.text.HardFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[85]"></a>Keysw_det</STRONG> (Thumb, 196 bytes, Stack size 16 bytes, gd32e230_wegui_4key_port.o(.text.Keysw_det))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Keysw_det
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_Interface_stick
</UL>

<P><STRONG><a name="[52]"></a>LCD_Port_Init</STRONG> (Thumb, 530 bytes, Stack size 72 bytes, gd32e230_lcd_hard_4spi_port.o(.text.LCD_Port_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = LCD_Port_Init &rArr; gpio_af_set
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_enable
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_init
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_i2s_deinit
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_af_set
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc_polynomial_set
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc_polynomial_size_set
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_driver_Init
</UL>

<P><STRONG><a name="[5a]"></a>LCD_Refresh</STRONG> (Thumb, 462 bytes, Stack size 80 bytes, gd32e230_lcd_hard_4spi_port.o(.text.LCD_Refresh))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = LCD_Refresh &rArr; ST7735_Set_Addr
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_SPI_DataSize_8b
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735_Set_Addr
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_loop_func
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_driver_Init
</UL>

<P><STRONG><a name="[71]"></a>LCD_Reset_crc</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gd32e230_lcd_hard_4spi_port.o(.text.LCD_Reset_crc))
<BR><BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_driver_Init
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RGB_Set_Driver_Colour
</UL>

<P><STRONG><a name="[73]"></a>LCD_Send_1Dat</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, gd32e230_lcd_hard_4spi_port.o(.text.LCD_Send_1Dat))
<BR><BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735_Clear
</UL>

<P><STRONG><a name="[4c]"></a>LCD_Send_nCmd</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, gd32e230_lcd_hard_4spi_port.o(.text.LCD_Send_nCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_Send_nCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_SPI_DataSize_8b
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_i2s_data_transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735_Set_RGB565_Mode
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735_Sleep_Out
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735_Soft_Reset
</UL>
<BR>[Address Reference Count : 2]<UL><LI> st7735.o(.text.ST7735_Set_Addr)
<LI> st7735.o(.text.ST7735_Init)
</UL>
<P><STRONG><a name="[76]"></a>LCD_delay_ms</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, gd32e230_lcd_hard_4spi_port.o(.text.LCD_delay_ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735_Init
</UL>

<P><STRONG><a name="[5e]"></a>LED_Func</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, main.o(.text.LED_Func))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LED_Func
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_output_bit_get
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[80]"></a>Lcd_Clear_GRAM</STRONG> (Thumb, 64 bytes, Stack size 28 bytes, lcd_driver.o(.text.Lcd_Clear_GRAM))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Lcd_Clear_GRAM
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_loop_func
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_driver_Init
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Screen_App_Begin
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_App_ThemeClock_Refresh
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_App_ThemeClock_Begin
</UL>

<P><STRONG><a name="[62]"></a>Lcd_Draw_Ascii</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, lcd_driver.o(.text.Lcd_Draw_Ascii))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Lcd_Draw_Ascii &rArr; Lcd_Draw_Bitmap &rArr; Lcd_Draw_One_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Draw_Bitmap
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Draw_UTF8_String
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_show_mList
</UL>

<P><STRONG><a name="[63]"></a>Lcd_Draw_Bitmap</STRONG> (Thumb, 132 bytes, Stack size 48 bytes, lcd_driver.o(.text.Lcd_Draw_Bitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Lcd_Draw_Bitmap &rArr; Lcd_Draw_One_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Draw_One_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Draw_Unicode
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Draw_Ascii
</UL>

<P><STRONG><a name="[65]"></a>Lcd_Draw_Box</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, lcd_driver.o(.text.Lcd_Draw_Box))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Lcd_Draw_Box &rArr; Lcd_Draw_VLine
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Draw_HLine
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Draw_VLine
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_loop_func
</UL>

<P><STRONG><a name="[37]"></a>Lcd_Draw_Circel_part</STRONG> (Thumb, 470 bytes, Stack size 72 bytes, lcd_driver.o(.text.Lcd_Draw_Circel_part))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Lcd_Draw_Circel_part &rArr; Lcd_Draw_Pixl &rArr; Lcd_Draw_One_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Draw_Pixl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_driver.o(.text.Lcd_Draw_RBox)
</UL>
<P><STRONG><a name="[67]"></a>Lcd_Draw_Line</STRONG> (Thumb, 202 bytes, Stack size 56 bytes, lcd_driver.o(.text.Lcd_Draw_Line))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = Lcd_Draw_Line &rArr; Lcd_Draw_Pixl &rArr; Lcd_Draw_One_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Draw_Pixl
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Draw_HLine
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Draw_VLine
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_show_mList
</UL>

<P><STRONG><a name="[38]"></a>Lcd_Draw_Pixl</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_driver.o(.text.Lcd_Draw_Pixl))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Lcd_Draw_Pixl &rArr; Lcd_Draw_One_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Draw_One_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Fill_Circel_part
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Draw_Circel_part
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Draw_Line
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_driver.o(.text.Lcd_Draw_RBox)
</UL>
<P><STRONG><a name="[68]"></a>Lcd_Draw_RBox</STRONG> (Thumb, 400 bytes, Stack size 56 bytes, lcd_driver.o(.text.Lcd_Draw_RBox))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Lcd_Draw_RBox &rArr; Lcd_Draw_VLine
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Draw_HLine
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Draw_VLine
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_show_tip
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_show_mList
</UL>

<P><STRONG><a name="[69]"></a>Lcd_Draw_UTF8_String</STRONG> (Thumb, 256 bytes, Stack size 32 bytes, lcd_driver.o(.text.Lcd_Draw_UTF8_String))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = Lcd_Draw_UTF8_String &rArr; Lcd_Draw_Unicode &rArr; Lcd_Draw_Bitmap &rArr; Lcd_Draw_One_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Draw_Unicode
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Draw_Ascii
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_loop_func
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_show_tip
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_show_mList
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Screen_App_Begin
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_App_ThemeClock_Refresh
</UL>

<P><STRONG><a name="[6a]"></a>Lcd_Draw_Unicode</STRONG> (Thumb, 96 bytes, Stack size 32 bytes, lcd_driver.o(.text.Lcd_Draw_Unicode))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Lcd_Draw_Unicode &rArr; Lcd_Draw_Bitmap &rArr; Lcd_Draw_One_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Draw_Bitmap
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Draw_UTF8_String
</UL>

<P><STRONG><a name="[3a]"></a>Lcd_Fill_Box</STRONG> (Thumb, 392 bytes, Stack size 48 bytes, lcd_driver.o(.text.Lcd_Fill_Box))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Lcd_Fill_Box
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_loop_func
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_show_mList
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_driver.o(.text.Lcd_Fill_RBox)
</UL>
<P><STRONG><a name="[39]"></a>Lcd_Fill_Circel_part</STRONG> (Thumb, 530 bytes, Stack size 72 bytes, lcd_driver.o(.text.Lcd_Fill_Circel_part))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Lcd_Fill_Circel_part &rArr; Lcd_Draw_Pixl &rArr; Lcd_Draw_One_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Draw_Pixl
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Draw_HLine
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Draw_VLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_driver.o(.text.Lcd_Fill_RBox)
</UL>
<P><STRONG><a name="[6b]"></a>Lcd_Fill_RBox</STRONG> (Thumb, 364 bytes, Stack size 48 bytes, lcd_driver.o(.text.Lcd_Fill_RBox))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Lcd_Fill_RBox &rArr; Lcd_Draw_VLine
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Draw_VLine
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_show_tip
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_show_mList
</UL>

<P><STRONG><a name="[8e]"></a>Lcd_Get_UTF8_XLen</STRONG> (Thumb, 168 bytes, Stack size 28 bytes, lcd_driver.o(.text.Lcd_Get_UTF8_XLen))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Lcd_Get_UTF8_XLen
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_loop_func
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_show_tip
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_show_mList
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_Push_Message_tip
</UL>

<P><STRONG><a name="[8f]"></a>Lcd_Get_UTF8_YLine</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, lcd_driver.o(.text.Lcd_Get_UTF8_YLine))
<BR><BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_show_tip
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_Push_Message_tip
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_Push_Slider_tip
</UL>

<P><STRONG><a name="[aa]"></a>Lcd_Set_Driver_Box</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, lcd_driver.o(.text.Lcd_Set_Driver_Box))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Lcd_Set_Driver_Box
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_driver_Init
</UL>

<P><STRONG><a name="[4d]"></a>Lcd_Set_Driver_Mode</STRONG> (Thumb, 512 bytes, Stack size 8 bytes, lcd_driver.o(.text.Lcd_Set_Driver_Mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Lcd_Set_Driver_Mode
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_show_tip
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_show_mList
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_App_ThemeClock_Refresh
</UL>
<BR>[Address Reference Count : 2]<UL><LI> lcd_wegui_driver.o(.text.Wegui_loop_func)
<LI> lcd_wegui_tip.o(.text.Wegui_show_tip)
</UL>
<P><STRONG><a name="[6c]"></a>Lcd_Wegui_Init</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, lcd_wegui_driver.o(.text.Lcd_Wegui_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = Lcd_Wegui_Init &rArr; Wegui_Uart_Port_Init &rArr; usart_baudrate_set &rArr; rcu_clock_freq_get
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_Hello_Word
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_mList_Init
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_Uart_Port_Init
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_4key_port_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gd32e23x_it.o(.text.NMI_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gd32e23x_it.o(.text.PendSV_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>RGB_Set_Driver_Colour</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, lcd_driver.o(.text.RGB_Set_Driver_Colour))
<BR><BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Reset_crc
</UL>
<BR>[Address Reference Count : 2]<UL><LI> lcd_driver.o(.text.lcd_driver_Init)
<LI> lcd_wegui_menu_mlist.o(.text.Wegui_mList_Init)
</UL>
<P><STRONG><a name="[a6]"></a>Read_rxRing_buff</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, gd32e230_wegui_uart_port.o(.text.Read_rxRing_buff))
<BR><BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_uart_rx_stick
</UL>

<P><STRONG><a name="[72]"></a>ST7735_Clear</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, st7735.o(.text.ST7735_Clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ST7735_Clear &rArr; ST7735_Set_Addr
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735_Set_Addr
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Send_1Dat
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735_Init
</UL>

<P><STRONG><a name="[74]"></a>ST7735_Init</STRONG> (Thumb, 364 bytes, Stack size 48 bytes, st7735.o(.text.ST7735_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = ST7735_Init &rArr; ST7735_Clear &rArr; ST7735_Set_Addr
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735_Clear
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735_Set_RGB565_Mode
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735_Sleep_Out
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735_Soft_Reset
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_driver_Init
</UL>

<P><STRONG><a name="[5b]"></a>ST7735_Set_Addr</STRONG> (Thumb, 78 bytes, Stack size 40 bytes, st7735.o(.text.ST7735_Set_Addr))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ST7735_Set_Addr
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Refresh
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735_Clear
</UL>

<P><STRONG><a name="[78]"></a>ST7735_Set_RGB565_Mode</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, st7735.o(.text.ST7735_Set_RGB565_Mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ST7735_Set_RGB565_Mode &rArr; LCD_Send_nCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Send_nCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735_Init
</UL>

<P><STRONG><a name="[77]"></a>ST7735_Sleep_Out</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, st7735.o(.text.ST7735_Sleep_Out))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ST7735_Sleep_Out &rArr; LCD_Send_nCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Send_nCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735_Init
</UL>

<P><STRONG><a name="[75]"></a>ST7735_Soft_Reset</STRONG> (Thumb, 14 bytes, Stack size 16 bytes, st7735.o(.text.ST7735_Soft_Reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ST7735_Soft_Reset &rArr; LCD_Send_nCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Send_nCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735_Init
</UL>

<P><STRONG><a name="[10]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gd32e23x_it.o(.text.SVC_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>Set_language_Chinese</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lcd_wegui_menu_app.o(.text.Set_language_Chinese))
<BR>[Address Reference Count : 1]<UL><LI> user_wegui_menu.o(.data.m_Setting_Language_Chinese)
</UL>
<P><STRONG><a name="[a]"></a>Set_language_English</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lcd_wegui_menu_app.o(.text.Set_language_English))
<BR>[Address Reference Count : 1]<UL><LI> user_wegui_menu.o(.data.m_Setting_Language_English)
</UL>
<P><STRONG><a name="[12]"></a>SysTick_Handler</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, gd32e23x_it.o(.text.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysTick_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_1ms_stick
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_decrement
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>SystemInit</STRONG> (Thumb, 386 bytes, Stack size 24 bytes, system_gd32e23x.o(.text.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SystemInit
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_vector_table_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(.text)
</UL>
<P><STRONG><a name="[2c]"></a>USART1_IRQHandler</STRONG> (Thumb, 210 bytes, Stack size 16 bytes, gd32e230_wegui_uart_port.o(.text.USART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USART1_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_interrupt_flag_clear
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_interrupt_flag_get
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_data_receive
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_rxRing
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e23x.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>Uart_Screen_App_Begin</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, lcd_wegui_menu_app.o(.text.Uart_Screen_App_Begin))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = Uart_Screen_App_Begin &rArr; Lcd_Draw_UTF8_String &rArr; Lcd_Draw_Unicode &rArr; Lcd_Draw_Bitmap &rArr; Lcd_Draw_One_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Draw_UTF8_String
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Clear_GRAM
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_get_string
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_wegui_menu.o(.data.m_App_UartScreen)
</UL>
<P><STRONG><a name="[5]"></a>Uart_Screen_App_Loop</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd_wegui_menu_app.o(.text.Uart_Screen_App_Loop))
<BR>[Address Reference Count : 1]<UL><LI> user_wegui_menu.o(.data.m_App_UartScreen)
</UL>
<P><STRONG><a name="[6]"></a>Uart_Screen_App_Quit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd_wegui_menu_app.o(.text.Uart_Screen_App_Quit))
<BR>[Address Reference Count : 1]<UL><LI> user_wegui_menu.o(.data.m_App_UartScreen)
</UL>
<P><STRONG><a name="[7]"></a>Uart_Screen_Refresh</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd_wegui_menu_app.o(.text.Uart_Screen_Refresh))
<BR>[Address Reference Count : 1]<UL><LI> user_wegui_menu.o(.data.m_App_UartScreen)
</UL>
<P><STRONG><a name="[7a]"></a>Wegui_1ms_stick</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, lcd_wegui_driver.o(.text.Wegui_1ms_stick))
<BR><BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[6d]"></a>Wegui_4key_port_Init</STRONG> (Thumb, 160 bytes, Stack size 24 bytes, gd32e230_wegui_4key_port.o(.text.Wegui_4key_port_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Wegui_4key_port_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Wegui_Init
</UL>

<P><STRONG><a name="[70]"></a>Wegui_Hello_Word</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lcd_wegui_driver.o(.text.Wegui_Hello_Word))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = Wegui_Hello_Word &rArr; Wegui_Push_Message_tip &rArr; Lcd_Get_UTF8_XLen
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_Push_Message_tip
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Wegui_Init
</UL>

<P><STRONG><a name="[83]"></a>Wegui_Interface_stick</STRONG> (Thumb, 542 bytes, Stack size 24 bytes, gd32e230_wegui_4key_port.o(.text.Wegui_Interface_stick))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = Wegui_Interface_stick &rArr; Wegui_mlist_Enter_cursor &rArr; Wegui_enter_menu &rArr; Wegui_Push_Message_tip &rArr; Lcd_Get_UTF8_XLen
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_input_bit_get
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_Tip_Value_Add
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_mlist_Enter_cursor
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_Tip_Value_Dec
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_mlist_cursor_Next
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_mlist_Back_menu
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_Tip_Save_andQuit
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_mlist_cursor_Prev
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_Tip_Quit
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Keysw_det
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_loop_func
</UL>

<P><STRONG><a name="[82]"></a>Wegui_Push_Message_tip</STRONG> (Thumb, 116 bytes, Stack size 32 bytes, lcd_wegui_tip.o(.text.Wegui_Push_Message_tip))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = Wegui_Push_Message_tip &rArr; Lcd_Get_UTF8_XLen
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Get_UTF8_YLine
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Get_UTF8_XLen
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_Hello_Word
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_enter_menu
</UL>

<P><STRONG><a name="[90]"></a>Wegui_Push_Slider_tip</STRONG> (Thumb, 164 bytes, Stack size 40 bytes, lcd_wegui_tip.o(.text.Wegui_Push_Slider_tip))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Wegui_Push_Slider_tip
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Get_UTF8_YLine
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_enter_menu
</UL>

<P><STRONG><a name="[86]"></a>Wegui_Tip_Quit</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lcd_wegui_tip.o(.text.Wegui_Tip_Quit))
<BR><BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_uart_rx_stick
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_Interface_stick
</UL>

<P><STRONG><a name="[88]"></a>Wegui_Tip_Save_andQuit</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, lcd_wegui_tip.o(.text.Wegui_Tip_Save_andQuit))
<BR><BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_uart_rx_stick
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_Interface_stick
</UL>

<P><STRONG><a name="[8d]"></a>Wegui_Tip_Value_Add</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, lcd_wegui_tip.o(.text.Wegui_Tip_Value_Add))
<BR><BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_uart_rx_stick
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_Interface_stick
</UL>

<P><STRONG><a name="[8b]"></a>Wegui_Tip_Value_Dec</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, lcd_wegui_tip.o(.text.Wegui_Tip_Value_Dec))
<BR><BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_uart_rx_stick
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_Interface_stick
</UL>

<P><STRONG><a name="[91]"></a>Wegui_UartSend_1Dat</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, gd32e230_wegui_uart_port.o(.text.Wegui_UartSend_1Dat))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Wegui_UartSend_1Dat
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_flag_get
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_data_transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_UartSend_nDat
</UL>

<P><STRONG><a name="[94]"></a>Wegui_UartSend_nDat</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, gd32e230_wegui_uart_port.o(.text.Wegui_UartSend_nDat))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Wegui_UartSend_nDat &rArr; Wegui_UartSend_1Dat
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_UartSend_1Dat
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_uart_rx_stick
</UL>

<P><STRONG><a name="[6e]"></a>Wegui_Uart_Port_Init</STRONG> (Thumb, 218 bytes, Stack size 40 bytes, gd32e230_wegui_uart_port.o(.text.Wegui_Uart_Port_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = Wegui_Uart_Port_Init &rArr; usart_baudrate_set &rArr; rcu_clock_freq_get
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_interrupt_enable
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_receive_config
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_transmit_config
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_enable
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_stop_bit_set
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_word_length_set
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_parity_config
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_baudrate_set
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_deinit
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_af_set
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_output_options_set
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_mode_set
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Wegui_Init
</UL>

<P><STRONG><a name="[9f]"></a>Wegui_enter_menu</STRONG> (Thumb, 248 bytes, Stack size 32 bytes, lcd_wegui_driver.o(.text.Wegui_enter_menu))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = Wegui_enter_menu &rArr; Wegui_Push_Message_tip &rArr; Lcd_Get_UTF8_XLen
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_Push_Message_tip
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_Push_Slider_tip
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_mList_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_uart_rx_stick
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_mlist_Enter_cursor
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_mlist_Back_menu
</UL>

<P><STRONG><a name="[81]"></a>Wegui_get_string</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcd_wegui_driver.o(.text.Wegui_get_string))
<BR><BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_show_mList
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_wDemo_wMessage_Pres2_func
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Screen_App_Begin
</UL>

<P><STRONG><a name="[a0]"></a>Wegui_loop_func</STRONG> (Thumb, 690 bytes, Stack size 64 bytes, lcd_wegui_driver.o(.text.Wegui_loop_func))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = Wegui_loop_func &rArr; Wegui_show_mList &rArr; Lcd_Draw_UTF8_String &rArr; Lcd_Draw_Unicode &rArr; Lcd_Draw_Bitmap &rArr; Lcd_Draw_One_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Fill_Box
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Draw_Box
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Refresh
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Draw_UTF8_String
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Clear_GRAM
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_show_tip
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_show_mList
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;itoa
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Get_UTF8_XLen
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_uart_rx_stick
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_Interface_stick
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6f]"></a>Wegui_mList_Init</STRONG> (Thumb, 158 bytes, Stack size 16 bytes, lcd_wegui_menu_mlist.o(.text.Wegui_mList_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Wegui_mList_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Wegui_Init
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_enter_menu
</UL>

<P><STRONG><a name="[89]"></a>Wegui_mlist_Back_menu</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, lcd_wegui_menu_mlist.o(.text.Wegui_mlist_Back_menu))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = Wegui_mlist_Back_menu &rArr; Wegui_enter_menu &rArr; Wegui_Push_Message_tip &rArr; Lcd_Get_UTF8_XLen
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_enter_menu
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_uart_rx_stick
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_Interface_stick
</UL>

<P><STRONG><a name="[8c]"></a>Wegui_mlist_Enter_cursor</STRONG> (Thumb, 166 bytes, Stack size 16 bytes, lcd_wegui_menu_mlist.o(.text.Wegui_mlist_Enter_cursor))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = Wegui_mlist_Enter_cursor &rArr; Wegui_enter_menu &rArr; Wegui_Push_Message_tip &rArr; Lcd_Get_UTF8_XLen
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_enter_menu
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_uart_rx_stick
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_Interface_stick
</UL>

<P><STRONG><a name="[8a]"></a>Wegui_mlist_cursor_Next</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, lcd_wegui_menu_mlist.o(.text.Wegui_mlist_cursor_Next))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Wegui_mlist_cursor_Next
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_submenu_sum
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_uart_rx_stick
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_Interface_stick
</UL>

<P><STRONG><a name="[87]"></a>Wegui_mlist_cursor_Prev</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lcd_wegui_menu_mlist.o(.text.Wegui_mlist_cursor_Prev))
<BR><BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_uart_rx_stick
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_Interface_stick
</UL>

<P><STRONG><a name="[a1]"></a>Wegui_show_mList</STRONG> (Thumb, 1408 bytes, Stack size 64 bytes, lcd_wegui_menu_mlist.o(.text.Wegui_show_mList))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = Wegui_show_mList &rArr; Lcd_Draw_UTF8_String &rArr; Lcd_Draw_Unicode &rArr; Lcd_Draw_Bitmap &rArr; Lcd_Draw_One_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Fill_RBox
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Draw_RBox
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Fill_Box
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Draw_Line
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Draw_UTF8_String
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Set_Driver_Mode
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_get_string
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;itoa
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Get_UTF8_XLen
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Draw_Ascii
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_loop_func
</UL>

<P><STRONG><a name="[a2]"></a>Wegui_show_tip</STRONG> (Thumb, 692 bytes, Stack size 48 bytes, lcd_wegui_tip.o(.text.Wegui_show_tip))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = Wegui_show_tip &rArr; Lcd_Draw_UTF8_String &rArr; Lcd_Draw_Unicode &rArr; Lcd_Draw_Bitmap &rArr; Lcd_Draw_One_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Fill_RBox
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Draw_RBox
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Draw_UTF8_String
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Set_Driver_Mode
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;itoa
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Get_UTF8_YLine
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Get_UTF8_XLen
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_loop_func
</UL>

<P><STRONG><a name="[a4]"></a>Wegui_uart_rx_stick</STRONG> (Thumb, 972 bytes, Stack size 40 bytes, gd32e230_wegui_uart_port.o(.text.Wegui_uart_rx_stick))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = Wegui_uart_rx_stick &rArr; Wegui_mlist_Enter_cursor &rArr; Wegui_enter_menu &rArr; Wegui_Push_Message_tip &rArr; Lcd_Get_UTF8_XLen
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_interrupt_flag_get
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_interrupt_disable
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_interrupt_enable
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_data_receive
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_enter_menu
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_UartSend_nDat
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_rxRing_buff
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SystemReset
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_Tip_Value_Add
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_mlist_Enter_cursor
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_Tip_Value_Dec
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_mlist_cursor_Next
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_mlist_Back_menu
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_Tip_Save_andQuit
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_mlist_cursor_Prev
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_Tip_Quit
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_loop_func
</UL>

<P><STRONG><a name="[7f]"></a>Write_rxRing</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, gd32e230_wegui_uart_port.o(.text.Write_rxRing))
<BR><BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[b8]"></a>adc_calibration_enable</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, gd32e23x_adc.o(.text.adc_calibration_enable))
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startup_init
</UL>

<P><STRONG><a name="[b4]"></a>adc_channel_length_config</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, gd32e23x_adc.o(.text.adc_channel_length_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = adc_channel_length_config
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startup_init
</UL>

<P><STRONG><a name="[b6]"></a>adc_data_alignment_config</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, gd32e23x_adc.o(.text.adc_data_alignment_config))
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startup_init
</UL>

<P><STRONG><a name="[b7]"></a>adc_enable</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gd32e23x_adc.o(.text.adc_enable))
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startup_init
</UL>

<P><STRONG><a name="[ad]"></a>adc_flag_clear</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gd32e23x_adc.o(.text.adc_flag_clear))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b5]"></a>adc_regular_channel_config</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, gd32e23x_adc.o(.text.adc_regular_channel_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = adc_regular_channel_config
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startup_init
</UL>

<P><STRONG><a name="[ae]"></a>adc_regular_data_read</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gd32e23x_adc.o(.text.adc_regular_data_read))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[af]"></a>adc_software_trigger_enable</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, gd32e23x_adc.o(.text.adc_software_trigger_enable))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startup_init
</UL>

<P><STRONG><a name="[b3]"></a>adc_special_function_config</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, gd32e23x_adc.o(.text.adc_special_function_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = adc_special_function_config
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startup_init
</UL>

<P><STRONG><a name="[59]"></a>crc_polynomial_set</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gd32e23x_crc.o(.text.crc_polynomial_set))
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Port_Init
</UL>

<P><STRONG><a name="[58]"></a>crc_polynomial_size_set</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gd32e23x_crc.o(.text.crc_polynomial_size_set))
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Port_Init
</UL>

<P><STRONG><a name="[79]"></a>delay_decrement</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, systick.o(.text.delay_decrement))
<BR><BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[54]"></a>gpio_af_set</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, gd32e23x_gpio.o(.text.gpio_af_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gpio_af_set
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_Uart_Port_Init
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Port_Init
</UL>

<P><STRONG><a name="[60]"></a>gpio_bit_reset</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gd32e23x_gpio.o(.text.gpio_bit_reset))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Func
</UL>

<P><STRONG><a name="[61]"></a>gpio_bit_set</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gd32e23x_gpio.o(.text.gpio_bit_set))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Func
</UL>

<P><STRONG><a name="[84]"></a>gpio_input_bit_get</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gd32e23x_gpio.o(.text.gpio_input_bit_get))
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_Interface_stick
</UL>

<P><STRONG><a name="[33]"></a>gpio_mode_set</STRONG> (Thumb, 62 bytes, Stack size 32 bytes, gd32e23x_gpio.o(.text.gpio_mode_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gpio_mode_set
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startup_init
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_Uart_Port_Init
</UL>
<BR>[Address Reference Count : 2]<UL><LI> gd32e230_lcd_hard_4spi_port.o(.text.LCD_Port_Init)
<LI> gd32e230_wegui_4key_port.o(.text.Wegui_4key_port_Init)
</UL>
<P><STRONG><a name="[5f]"></a>gpio_output_bit_get</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gd32e23x_gpio.o(.text.gpio_output_bit_get))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Func
</UL>

<P><STRONG><a name="[34]"></a>gpio_output_options_set</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, gd32e23x_gpio.o(.text.gpio_output_options_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gpio_output_options_set
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startup_init
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_Uart_Port_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gd32e230_lcd_hard_4spi_port.o(.text.LCD_Port_Init)
</UL>
<P><STRONG><a name="[a3]"></a>itoa</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, lcd_wegui_driver.o(.text.itoa))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = itoa
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_wDemo_wMessage_ADC_func
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_loop_func
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_show_tip
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_show_mList
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_wDemo_wMessage_Pres_func
</UL>

<P><STRONG><a name="[a9]"></a>lcd_driver_Init</STRONG> (Thumb, 190 bytes, Stack size 16 bytes, lcd_driver.o(.text.lcd_driver_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = lcd_driver_Init &rArr; LCD_Refresh &rArr; ST7735_Set_Addr
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Refresh
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Clear_GRAM
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7735_Init
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Set_Driver_Box
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Port_Init
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Reset_crc
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[0]"></a>m_App_ThemeClock_Begin</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd_wegui_menu_app.o(.text.m_App_ThemeClock_Begin))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = m_App_ThemeClock_Begin &rArr; Lcd_Clear_GRAM
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Clear_GRAM
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_wegui_menu.o(.data.m_App_ThemeClock)
</UL>
<P><STRONG><a name="[1]"></a>m_App_ThemeClock_Loop</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd_wegui_menu_app.o(.text.m_App_ThemeClock_Loop))
<BR>[Address Reference Count : 1]<UL><LI> user_wegui_menu.o(.data.m_App_ThemeClock)
</UL>
<P><STRONG><a name="[2]"></a>m_App_ThemeClock_Quit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd_wegui_menu_app.o(.text.m_App_ThemeClock_Quit))
<BR>[Address Reference Count : 1]<UL><LI> user_wegui_menu.o(.data.m_App_ThemeClock)
</UL>
<P><STRONG><a name="[3]"></a>m_App_ThemeClock_Refresh</STRONG> (Thumb, 138 bytes, Stack size 32 bytes, lcd_wegui_menu_app.o(.text.m_App_ThemeClock_Refresh))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = m_App_ThemeClock_Refresh &rArr; Lcd_Draw_UTF8_String &rArr; Lcd_Draw_Unicode &rArr; Lcd_Draw_Bitmap &rArr; Lcd_Draw_One_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Draw_UTF8_String
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Set_Driver_Mode
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Clear_GRAM
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_wegui_menu.o(.data.m_App_ThemeClock)
</UL>
<P><STRONG><a name="[ab]"></a>m_wDemo_wMessage_ADC_func</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, lcd_wegui_menu_app.o(.text.m_wDemo_wMessage_ADC_func))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = m_wDemo_wMessage_ADC_func &rArr; itoa
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;itoa
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c]"></a>m_wDemo_wMessage_Pres2_func</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, lcd_wegui_menu_app.o(.text.m_wDemo_wMessage_Pres2_func))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = m_wDemo_wMessage_Pres2_func
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_get_string
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_wegui_menu.o(.data.m_wDemo_wMessage_Pres2)
</UL>
<P><STRONG><a name="[b]"></a>m_wDemo_wMessage_Pres_func</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, lcd_wegui_menu_app.o(.text.m_wDemo_wMessage_Pres_func))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = m_wDemo_wMessage_Pres_func &rArr; itoa
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;itoa
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_wegui_menu.o(.data.m_wDemo_wMessage_Pres)
</UL>
<P><STRONG><a name="[2f]"></a>main</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, main.o(.text.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = main &rArr; Wegui_loop_func &rArr; Wegui_show_mList &rArr; Lcd_Draw_UTF8_String &rArr; Lcd_Draw_Unicode &rArr; Lcd_Draw_Bitmap &rArr; Lcd_Draw_One_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_wDemo_wMessage_ADC_func
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_loop_func
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Wegui_Init
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_driver_Init
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Func
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startup_init
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_flag_clear
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_regular_data_read
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_software_trigger_enable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[9e]"></a>nvic_irq_enable</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, gd32e23x_misc.o(.text.nvic_irq_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = nvic_irq_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_Uart_Port_Init
</UL>

<P><STRONG><a name="[7b]"></a>nvic_vector_table_set</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, gd32e23x_misc.o(.text.nvic_vector_table_set))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[b2]"></a>rcu_adc_clock_config</STRONG> (Thumb, 214 bytes, Stack size 0 bytes, gd32e23x_rcu.o(.text.rcu_adc_clock_config))
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startup_init
</UL>

<P><STRONG><a name="[b9]"></a>rcu_clock_freq_get</STRONG> (Thumb, 362 bytes, Stack size 20 bytes, gd32e23x_rcu.o(.text.rcu_clock_freq_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = rcu_clock_freq_get
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_baudrate_set
</UL>

<P><STRONG><a name="[32]"></a>rcu_periph_clock_enable</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, gd32e23x_rcu.o(.text.rcu_periph_clock_enable))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_Uart_Port_Init
</UL>
<BR>[Address Reference Count : 3]<UL><LI> main.o(.text.startup_init)
<LI> gd32e230_lcd_hard_4spi_port.o(.text.LCD_Port_Init)
<LI> gd32e230_wegui_4key_port.o(.text.Wegui_4key_port_Init)
</UL>
<P><STRONG><a name="[b1]"></a>rcu_periph_reset_disable</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, gd32e23x_rcu.o(.text.rcu_periph_reset_disable))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_deinit
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_i2s_deinit
</UL>

<P><STRONG><a name="[b0]"></a>rcu_periph_reset_enable</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, gd32e23x_rcu.o(.text.rcu_periph_reset_enable))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_deinit
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_i2s_deinit
</UL>

<P><STRONG><a name="[57]"></a>spi_enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gd32e23x_spi.o(.text.spi_enable))
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Port_Init
</UL>

<P><STRONG><a name="[5d]"></a>spi_i2s_data_transmit</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, gd32e23x_spi.o(.text.spi_i2s_data_transmit))
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Send_nCmd
</UL>

<P><STRONG><a name="[55]"></a>spi_i2s_deinit</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, gd32e23x_spi.o(.text.spi_i2s_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = spi_i2s_deinit
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_reset_disable
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_reset_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Port_Init
</UL>

<P><STRONG><a name="[56]"></a>spi_init</STRONG> (Thumb, 142 bytes, Stack size 16 bytes, gd32e23x_spi.o(.text.spi_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = spi_init
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Port_Init
</UL>

<P><STRONG><a name="[ac]"></a>startup_init</STRONG> (Thumb, 240 bytes, Stack size 24 bytes, main.o(.text.startup_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = startup_init &rArr; gpio_mode_set
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_adc_clock_config
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_output_options_set
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_mode_set
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_software_trigger_enable
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_regular_channel_config
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_channel_length_config
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_data_alignment_config
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_special_function_config
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_calibration_enable
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8]"></a>update_Wegui_screen_brightness</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, lcd_wegui_menu_app.o(.text.update_Wegui_screen_brightness))
<BR>[Address Reference Count : 1]<UL><LI> user_wegui_menu.o(.data.m_Setting_Display_Brightness)
</UL>
<P><STRONG><a name="[99]"></a>usart_baudrate_set</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, gd32e23x_usart.o(.text.usart_baudrate_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = usart_baudrate_set &rArr; rcu_clock_freq_get
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_clock_freq_get
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_Uart_Port_Init
</UL>

<P><STRONG><a name="[7d]"></a>usart_data_receive</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gd32e23x_usart.o(.text.usart_data_receive))
<BR><BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_uart_rx_stick
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[93]"></a>usart_data_transmit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gd32e23x_usart.o(.text.usart_data_transmit))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_UartSend_1Dat
</UL>

<P><STRONG><a name="[95]"></a>usart_deinit</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, gd32e23x_usart.o(.text.usart_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usart_deinit
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_reset_disable
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_reset_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_Uart_Port_Init
</UL>

<P><STRONG><a name="[9c]"></a>usart_enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gd32e23x_usart.o(.text.usart_enable))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_Uart_Port_Init
</UL>

<P><STRONG><a name="[92]"></a>usart_flag_get</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gd32e23x_usart.o(.text.usart_flag_get))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_UartSend_1Dat
</UL>

<P><STRONG><a name="[a8]"></a>usart_interrupt_disable</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gd32e23x_usart.o(.text.usart_interrupt_disable))
<BR><BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_uart_rx_stick
</UL>

<P><STRONG><a name="[9d]"></a>usart_interrupt_enable</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gd32e23x_usart.o(.text.usart_interrupt_enable))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_Uart_Port_Init
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_uart_rx_stick
</UL>

<P><STRONG><a name="[7e]"></a>usart_interrupt_flag_clear</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, gd32e23x_usart.o(.text.usart_interrupt_flag_clear))
<BR><BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[7c]"></a>usart_interrupt_flag_get</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, gd32e23x_usart.o(.text.usart_interrupt_flag_get))
<BR><BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_uart_rx_stick
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[98]"></a>usart_parity_config</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, gd32e23x_usart.o(.text.usart_parity_config))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_Uart_Port_Init
</UL>

<P><STRONG><a name="[9a]"></a>usart_receive_config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gd32e23x_usart.o(.text.usart_receive_config))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_Uart_Port_Init
</UL>

<P><STRONG><a name="[97]"></a>usart_stop_bit_set</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, gd32e23x_usart.o(.text.usart_stop_bit_set))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_Uart_Port_Init
</UL>

<P><STRONG><a name="[9b]"></a>usart_transmit_config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gd32e23x_usart.o(.text.usart_transmit_config))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_Uart_Port_Init
</UL>

<P><STRONG><a name="[96]"></a>usart_word_length_set</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, gd32e23x_usart.o(.text.usart_word_length_set))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_Uart_Port_Init
</UL>

<P><STRONG><a name="[c5]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[c6]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[c7]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[5c]"></a>Set_SPI_DataSize_8b</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, gd32e230_lcd_hard_4spi_port.o(.text.Set_SPI_DataSize_8b))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Refresh
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Send_nCmd
</UL>

<P><STRONG><a name="[a7]"></a>__NVIC_SystemReset</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, gd32e230_wegui_uart_port.o(.text.__NVIC_SystemReset))
<BR><BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wegui_uart_rx_stick
</UL>

<P><STRONG><a name="[3c]"></a>lcd_driver_Write_0</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, lcd_driver.o(.text.lcd_driver_Write_0))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lcd_driver_Write_0
</UL>
<BR>[Address Reference Count : 2]<UL><LI> lcd_driver.o(.text.Lcd_Set_Driver_Mode)
<LI> lcd_driver.o(.text.lcd_driver_Init)
</UL>
<P><STRONG><a name="[3d]"></a>lcd_driver_Write_1</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, lcd_driver.o(.text.lcd_driver_Write_1))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lcd_driver_Write_1
</UL>
<BR>[Address Reference Count : 2]<UL><LI> lcd_driver.o(.text.Lcd_Set_Driver_Mode)
<LI> lcd_driver.o(.text.lcd_driver_Init)
</UL>
<P><STRONG><a name="[3e]"></a>lcd_driver_Write_0_inBox</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, lcd_driver.o(.text.lcd_driver_Write_0_inBox))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lcd_driver_Write_0_inBox
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_driver.o(.text.Lcd_Set_Driver_Mode)
</UL>
<P><STRONG><a name="[3f]"></a>lcd_driver_Write_4_inBox</STRONG> (Thumb, 130 bytes, Stack size 16 bytes, lcd_driver.o(.text.lcd_driver_Write_4_inBox))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lcd_driver_Write_4_inBox
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_driver.o(.text.Lcd_Set_Driver_Mode)
</UL>
<P><STRONG><a name="[36]"></a>lcd_driver_Write_1_inBox</STRONG> (Thumb, 130 bytes, Stack size 16 bytes, lcd_driver.o(.text.lcd_driver_Write_1_inBox))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lcd_driver_Write_1_inBox
</UL>
<BR>[Address Reference Count : 5]<UL><LI> lcd_driver.o(.text.Lcd_Draw_Circel_part)
<LI> lcd_driver.o(.text.Lcd_Fill_Circel_part)
<LI> lcd_driver.o(.text.Lcd_Fill_RBox)
<LI> lcd_driver.o(.text.Lcd_Draw_RBox)
<LI> lcd_driver.o(.text.Lcd_Set_Driver_Mode)
</UL>
<P><STRONG><a name="[40]"></a>lcd_driver_Write_4</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, lcd_driver.o(.text.lcd_driver_Write_4))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lcd_driver_Write_4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_driver.o(.text.Lcd_Set_Driver_Mode)
</UL>
<P><STRONG><a name="[41]"></a>lcd_driver_Write_3_inBox</STRONG> (Thumb, 130 bytes, Stack size 16 bytes, lcd_driver.o(.text.lcd_driver_Write_3_inBox))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lcd_driver_Write_3_inBox
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_driver.o(.text.Lcd_Set_Driver_Mode)
</UL>
<P><STRONG><a name="[42]"></a>lcd_driver_Write_5</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, lcd_driver.o(.text.lcd_driver_Write_5))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lcd_driver_Write_5
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_driver.o(.text.Lcd_Set_Driver_Mode)
</UL>
<P><STRONG><a name="[43]"></a>lcd_driver_Write_2_inBox</STRONG> (Thumb, 130 bytes, Stack size 16 bytes, lcd_driver.o(.text.lcd_driver_Write_2_inBox))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lcd_driver_Write_2_inBox
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_driver.o(.text.Lcd_Set_Driver_Mode)
</UL>
<P><STRONG><a name="[44]"></a>lcd_driver_Write_3</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, lcd_driver.o(.text.lcd_driver_Write_3))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lcd_driver_Write_3
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_driver.o(.text.Lcd_Set_Driver_Mode)
</UL>
<P><STRONG><a name="[45]"></a>lcd_driver_Write_2</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, lcd_driver.o(.text.lcd_driver_Write_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lcd_driver_Write_2
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_driver.o(.text.Lcd_Set_Driver_Mode)
</UL>
<P><STRONG><a name="[46]"></a>lcd_driver_Write_6</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, lcd_driver.o(.text.lcd_driver_Write_6))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lcd_driver_Write_6
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_driver.o(.text.Lcd_Set_Driver_Mode)
</UL>
<P><STRONG><a name="[47]"></a>lcd_driver_Write_7</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, lcd_driver.o(.text.lcd_driver_Write_7))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lcd_driver_Write_7
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_driver.o(.text.Lcd_Set_Driver_Mode)
</UL>
<P><STRONG><a name="[48]"></a>lcd_driver_Write_5_inBox</STRONG> (Thumb, 130 bytes, Stack size 16 bytes, lcd_driver.o(.text.lcd_driver_Write_5_inBox))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lcd_driver_Write_5_inBox
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_driver.o(.text.Lcd_Set_Driver_Mode)
</UL>
<P><STRONG><a name="[49]"></a>lcd_driver_Write_6_inBox</STRONG> (Thumb, 130 bytes, Stack size 16 bytes, lcd_driver.o(.text.lcd_driver_Write_6_inBox))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lcd_driver_Write_6_inBox
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_driver.o(.text.Lcd_Set_Driver_Mode)
</UL>
<P><STRONG><a name="[35]"></a>lcd_driver_Write_inv</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, lcd_driver.o(.text.lcd_driver_Write_inv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lcd_driver_Write_inv
</UL>
<BR>[Address Reference Count : 5]<UL><LI> lcd_driver.o(.text.Lcd_Draw_Circel_part)
<LI> lcd_driver.o(.text.Lcd_Fill_Circel_part)
<LI> lcd_driver.o(.text.Lcd_Fill_RBox)
<LI> lcd_driver.o(.text.Lcd_Draw_RBox)
<LI> lcd_driver.o(.text.Lcd_Set_Driver_Mode)
</UL>
<P><STRONG><a name="[4a]"></a>lcd_driver_Write_inv_inBox</STRONG> (Thumb, 130 bytes, Stack size 16 bytes, lcd_driver.o(.text.lcd_driver_Write_inv_inBox))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lcd_driver_Write_inv_inBox
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_driver.o(.text.Lcd_Set_Driver_Mode)
</UL>
<P><STRONG><a name="[4b]"></a>lcd_driver_Write_7_inBox</STRONG> (Thumb, 130 bytes, Stack size 16 bytes, lcd_driver.o(.text.lcd_driver_Write_7_inBox))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lcd_driver_Write_7_inBox
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_driver.o(.text.Lcd_Set_Driver_Mode)
</UL>
<P><STRONG><a name="[64]"></a>Lcd_Draw_One_Byte</STRONG> (Thumb, 186 bytes, Stack size 40 bytes, lcd_driver.o(.text.Lcd_Draw_One_Byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Lcd_Draw_One_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Draw_Bitmap
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Draw_Pixl
</UL>

<P><STRONG><a name="[66]"></a>Lcd_Draw_VLine</STRONG> (Thumb, 228 bytes, Stack size 32 bytes, lcd_driver.o(.text.Lcd_Draw_VLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Lcd_Draw_VLine
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Fill_RBox
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Draw_RBox
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Draw_Box
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Fill_Circel_part
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Draw_Line
</UL>

<P><STRONG><a name="[3b]"></a>Lcd_Draw_HLine</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, lcd_driver.o(.text.Lcd_Draw_HLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Lcd_Draw_HLine
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Draw_RBox
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Draw_Box
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Fill_Circel_part
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Draw_Line
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_driver.o(.text.Lcd_Fill_RBox)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
